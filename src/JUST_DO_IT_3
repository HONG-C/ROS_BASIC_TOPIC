1.roslaunch
roslaunch란? 한번에 여러 직원(노드)들 일 시키기
cd catkin_ws/src/ros_basic_topic/                      (패키지 경로로 이동)
mkdir launch                                           (런치파일 넣을 폴더 만들기)
gedit ros_basic_topic.launch                           (런치 파일 생성)
아래내용 복붙 후 저장 

<launch>
  <node name="listener" pkg="ros_basic_topic" type="listener.py" output="screen"/>
  <node name="talker" pkg="ros_basic_topic" type="talker.py" output="screen" />
</launch>

cm                                                     (변경사항 저장)
roslaunch ros_basic_topic ros_basic_topic.launch       (특이하게 꼭 roscore 실행 안해도 됌!)

2.cd관련 부가 설명
cd -                                                   (전 경로로 이동)
cd ..                                                  (바로 상위 경로로 이동)

3.(중요!)타 노드에서 퍼블리싱하는 토픽 받는 법 
roscore                                                (마스터 실행)
rosrun turtlesim turtle_teleop_key                     (퍼블리셔 실행)          
rosrun turtlesim turtlesim_node                        (서브스크라이버 실행)

해볼것:turtle_teleop_key에서 보내는 토픽 다른 서브스크라이버에서 받아보기
[방법1]
rostopic list                                          (퍼블리싱 되고있는 토픽들 확인)
rostopic type /turtle1/cmd_vel                         (메시지 타입 확인)
roswiki 들어가서 확인한 메시지 타입(geometry_msgs/Twist) 검색창에 검색
Compact Message Definition에서 뒤에 있는 linear 확인
listener.py파일 복붙해서 listener_test.py파일 만들기
내용 수정
[방법2]
rosnode info /teleop_turtle                            (노드의 정보 표시, 어떤 토픽을 퍼블리싱하고 서브스크라이빙하는지 알려줌, 그 외 정보도 제공)
그 이후는 1번과 동일 

4.토픽을 테스트로 퍼블리싱 해보고 싶을 때
rostopic pub -1 /angle std_msgs/Int64 20    (-1은 한번 퍼블리싱하라는 뜻)
rostopic pub -1 (토픽 이름) (퍼블리시되는 메시지 타입) (데이터) 











